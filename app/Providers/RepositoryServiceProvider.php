<?php

namespace App\Providers;

use App\Models\Admins\Repositories\AdminRepository;
use App\Models\Admins\Repositories\AuthRepository;
use App\Models\Admins\Repositories\Interfaces\AdminRepositoryInterface;
use App\Models\Admins\Repositories\Interfaces\AuthRepositoryInterface;
use App\Models\Banners\Repositories\BannerRepository;
use App\Models\Banners\Repositories\Interfaces\BannerRepositoryInterface;
use App\Models\Bins\Repositories\BinRepository;
use App\Models\Bins\Repositories\Interfaces\BinRepositoryInterface;
use App\Models\Cards\Repositories\CardRepository;
use App\Models\Cards\Repositories\Interfaces\CardRepositoryInterface;
use App\Models\ChocoAwards\Repositories\ChocoAwardRepository;
use App\Models\ChocoAwards\Repositories\Interfaces\ChocoAwardRepositoryInterface;
use App\Models\ChocoPromotions\Repositories\ChocoPromotionRepository;
use App\Models\ChocoPromotions\Repositories\Interfaces\ChocoPromotionRepositoryInterface;
use App\Models\Cities\Repositories\CityRepository;
use App\Models\Cities\Repositories\Interfaces\CityRepositoryInterface;
use App\Models\Claim\Repositories\ClaimRepository;
use App\Models\Claim\Repositories\Interfaces\ClaimRepositoryInterface;
use App\Models\Contact\Repositories\ContactRepository;
use App\Models\Contact\Repositories\Interfaces\ContactRepositoryInterface;
use App\Models\ContentManagements\Interfaces\ContentManagementRepositoryInterface;
use App\Models\ContentManagements\Repositories\ContentManagementRepository;
use App\Models\Countries\Repositories\CountryRepository;
use App\Models\Countries\Repositories\Interfaces\CountryRepositoryInterface;
use App\Models\Customers\Repositories\CustomerRepository;
use App\Models\Customers\Repositories\Interfaces\CustomerRepositoryInterface;
use App\Models\HeadquarterImages\Repositories\HeadquarterImageRepository;
use App\Models\HeadquarterImages\Repositories\Interfaces\HeadquarterImageRepositoryInterface;
use App\Models\Headquarters\Repositories\ConsumerHeadquarterRepository;
use App\Models\Headquarters\Repositories\HeadquarterRepository;
use App\Models\Headquarters\Repositories\Interfaces\ConsumerHeadquarterRepositoryInterface;
use App\Models\Headquarters\Repositories\Interfaces\HeadquarterRepositoryInterface;
use App\Models\InternalErrors\Repositories\Interfaces\InternalErrorRepositoryInterface;
use App\Models\InternalErrors\Repositories\InternalErrorRepository;
use App\Models\JobApplication\Repositories\Interfaces\JobApplicationRepositoryInterface;
use App\Models\JobApplication\Repositories\JobApplicationRepository;
use App\Models\Modules\Repositories\Interfaces\ModuleRepositoryInterface;
use App\Models\Modules\Repositories\ModuleRepository;
use App\Models\MovieFormats\Repositories\Interfaces\MovieFormatRepositoryInterface;
use App\Models\MovieFormats\Repositories\MovieFormatRepository;
use App\Models\MovieGenders\Repositories\Interfaces\MovieGenderRepositoryInterface;
use App\Models\MovieGenders\Repositories\MovieGenderRepository;
use App\Models\Movies\Repositories\Interfaces\MovieRepositoryInterface;
use App\Models\Movies\Repositories\Interfaces\MovieValidPromotionRepositoryInterface;
use App\Models\Movies\Repositories\MovieRepository;
use App\Models\Movies\Repositories\MovieValidPromotionRepository;
use App\Models\MovieTimes\Repositories\Interfaces\MovieTimeRepositoryInterface;
use App\Models\MovieTimes\Repositories\MovieTimeRepository;
use App\Models\MovieTimeTariffs\Repositories\Interfaces\MovieTimeTariffRepositoryInterface;
use App\Models\MovieTimeTariffs\Repositories\MovieTimeTariffRepository;
use App\Models\PaymentGateways\Interfaces\PaymentGatewayInfoRepositoryInterface;
use App\Models\PaymentGateways\Interfaces\PaymentGatewayTransactionRepositoryInterface;
use App\Models\PaymentGateways\Repositories\PaymentGatewayInfoRepository;
use App\Models\PaymentGateways\Repositories\PaymentGatewayTransactionRepository;
use App\Models\Permissions\Repositories\Interfaces\PermissionRepositoryInterface;
use App\Models\PointsHistory\Repositories\Interfaces\PointHistoryRepositoryInterface;
use App\Models\PointsHistory\Repositories\PointHistoryRepository;
use App\Models\Products\Repositories\Interfaces\ProductRepositoryInterface;
use App\Models\Products\Repositories\Interfaces\SweetRepositoryInterface;
use App\Models\Products\Repositories\ProductRepository;
use App\Models\Products\Repositories\SweetRepository;
use App\Models\ProductTypes\Repositories\Interfaces\ProductTypeRepositoryInterface;
use App\Models\ProductTypes\Repositories\ProductTypeRepository;
use App\Models\PurchaseErrors\Repositories\Interfaces\PurchaseErrorRepositoryInterface;
use App\Models\PurchaseErrors\Repositories\PurchaseErrorRepository;
use App\Models\Purchases\Repositories\BillingRepository;
use App\Models\Purchases\Repositories\Interfaces\BillingRepositoryInterface;
use App\Models\Purchases\Repositories\Interfaces\PurchaseInternalRepositoryInterface;
use App\Models\Purchases\Repositories\Interfaces\PurchasePaymentRepositoryInterface;
use App\Models\Purchases\Repositories\Interfaces\PurchaseRepositoryInterface;
use App\Models\Purchases\Repositories\Interfaces\SweetPurchaseRepositoryInterface;
use App\Models\Purchases\Repositories\PurchaseInternalRepository;
use App\Models\Purchases\Repositories\PurchasePaymentRepository;
use App\Models\Purchases\Repositories\PurchaseRepository;
use App\Models\Purchases\Repositories\SweetPurchaseRepository;
use App\Models\Rooms\Repositories\Interfaces\RoomRepositoryInterface;
use App\Models\Rooms\Repositories\RoomRepository;
use App\Models\Settings\Repositories\Interfaces\SettingRepositoryInterface;
use App\Models\Settings\Repositories\SettingRepository;
use App\Models\Permissions\Repositories\PermissionRepository;
use App\Models\ProductPrices\Repositories\Interfaces\ProductPriceRepositoryInterface;
use App\Models\ProductPrices\Repositories\ProductPriceRepository;
use App\Models\Roles\Repositories\Interfaces\RoleRepositoryInterface;
use App\Models\Roles\Repositories\RoleRepository;
use App\Models\SyncLogs\Repositories\Interfaces\SyncLogRepositoryInterface;
use App\Models\SyncLogs\Repositories\SyncLogRepository;
use App\Models\TicketAwards\Repositories\Interfaces\TicketAwardRepositoryInterface;
use App\Models\TicketAwards\Repositories\TicketAwardRepository;
use App\Models\TicketPromotions\Repositories\Interfaces\TicketPromotionRepositoryInterface;
use App\Models\TicketPromotions\Repositories\TicketPromotionRepository;
use App\Models\TypeDocuments\Repositories\DocumentTypeRepository;
use App\Models\TypeDocuments\Repositories\Interfaces\DocumentTypeRepositoryInterface;
use App\Models\Ubigeo\Repositories\Interfaces\UbigeoRepositoryInterface;
use App\Models\Ubigeo\Repositories\UbigeoRepository;
use App\Models\Users\Repositories\Interfaces\UserRepositoryInterface;
use App\Models\Users\Repositories\UserRepository;
use App\Models\UsersPartners\Repositories\Interfaces\UserPartnerRepositoryInterface;
use App\Models\UsersPartners\Repositories\UserPartnerRepository;
use Illuminate\Support\ServiceProvider;

class RepositoryServiceProvider extends ServiceProvider
{
    public function register()
    {
        $this->app->bind(UserRepositoryInterface::class, UserRepository::class);
        $this->app->bind(HeadquarterRepositoryInterface::class, HeadquarterRepository::class);
        $this->app->bind(BannerRepositoryInterface::class, BannerRepository::class);
        $this->app->bind(MovieRepositoryInterface::class, MovieRepository::class);
        $this->app->bind(CityRepositoryInterface::class, CityRepository::class);
        $this->app->bind(DocumentTypeRepositoryInterface::class, DocumentTypeRepository::class);
        $this->app->bind(MovieGenderRepositoryInterface::class, MovieGenderRepository::class);
        $this->app->bind(SettingRepositoryInterface::class, SettingRepository::class);
        $this->app->bind(MovieTimeRepositoryInterface::class, MovieTimeRepository::class);
        $this->app->bind(UbigeoRepositoryInterface::class, UbigeoRepository::class);
        $this->app->bind(JobApplicationRepositoryInterface::class, JobApplicationRepository::class);
        $this->app->bind(ContactRepositoryInterface::class, ContactRepository::class);
        $this->app->bind(ClaimRepositoryInterface::class, ClaimRepository::class);
        $this->app->bind(AdminRepositoryInterface::class, AdminRepository::class);
        $this->app->bind(AuthRepositoryInterface::class, AuthRepository::class);
        $this->app->bind(ModuleRepositoryInterface::class, ModuleRepository::class);
        $this->app->bind(RoleRepositoryInterface::class, RoleRepository::class);
        $this->app->bind(PermissionRepositoryInterface::class, PermissionRepository::class);
        $this->app->bind(HeadquarterImageRepositoryInterface::class, HeadquarterImageRepository::class);
        $this->app->bind(CountryRepositoryInterface::class, CountryRepository::class);
        $this->app->bind(SyncLogRepositoryInterface::class, SyncLogRepository::class);
        $this->app->bind(PurchaseRepositoryInterface::class, PurchaseRepository::class);
        $this->app->bind(ConsumerHeadquarterRepositoryInterface::class, ConsumerHeadquarterRepository::class);
        $this->app->bind(PaymentGatewayInfoRepositoryInterface::class, PaymentGatewayInfoRepository::class);
        $this->app->bind(PaymentGatewayTransactionRepositoryInterface::class, PaymentGatewayTransactionRepository::class);
        $this->app->bind(PurchaseErrorRepositoryInterface::class, PurchaseErrorRepository::class);
        $this->app->bind(MovieTimeTariffRepositoryInterface::class, MovieTimeTariffRepository::class);
        $this->app->bind(RoomRepositoryInterface::class, RoomRepository::class);
        $this->app->bind(TicketPromotionRepositoryInterface::class, TicketPromotionRepository::class);
        $this->app->bind(ProductRepositoryInterface::class, ProductRepository::class);
        $this->app->bind(ProductTypeRepositoryInterface::class, ProductTypeRepository::class);
        $this->app->bind(ChocoPromotionRepositoryInterface::class, ChocoPromotionRepository::class);
        $this->app->bind(ProductPriceRepositoryInterface::class, ProductPriceRepository::class);
        $this->app->bind(MovieFormatRepositoryInterface::class, MovieFormatRepository::class);
        $this->app->bind(SweetRepositoryInterface::class, SweetRepository::class);
        $this->app->bind(SweetPurchaseRepositoryInterface::class, SweetPurchaseRepository::class);
        $this->app->bind(InternalErrorRepositoryInterface::class, InternalErrorRepository::class);
        $this->app->bind(PurchasePaymentRepositoryInterface::class, PurchasePaymentRepository::class);
        $this->app->bind(CardRepositoryInterface::class, CardRepository::class);
        $this->app->bind(CustomerRepositoryInterface::class, CustomerRepository::class);
        $this->app->bind(ChocoAwardRepositoryInterface::class, ChocoAwardRepository::class);
        $this->app->bind(TicketAwardRepositoryInterface::class, TicketAwardRepository::class);
        $this->app->bind(MovieValidPromotionRepositoryInterface::class, MovieValidPromotionRepository::class);
        $this->app->bind(PointHistoryRepositoryInterface::class, PointHistoryRepository::class);
        $this->app->bind(BillingRepositoryInterface::class, BillingRepository::class);
        $this->app->bind(PurchaseInternalRepositoryInterface::class, PurchaseInternalRepository::class);
        $this->app->bind(UserPartnerRepositoryInterface::class, UserPartnerRepository::class);
        $this->app->bind(BinRepositoryInterface::class, BinRepository::class);
        $this->app->bind(ContentManagementRepositoryInterface::class, ContentManagementRepository::class);
    }
}
